import { http, fmt }

def Main(start any) (stop any) {
	App, fmt.Println, Panic // `Panic` will terminate the program
	---
	:start -> app:sig
	[app:err, println:err] -> panic // we only handle `:err` at this lvl
	app:data -> println:data
	println:res -> :stop
}

def App(sig any) (data string, err error) {
	http.Get? // '?' implicitly sends `:err` downstream
	---
	:sig -> 'definitely not a valid URL' -> get
	get:res -> .body -> :data
	// no need for explicit error handling thanks to `?`
}
